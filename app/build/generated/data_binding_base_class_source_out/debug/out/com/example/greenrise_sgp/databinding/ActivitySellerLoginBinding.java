// Generated by view binder compiler. Do not edit!
package com.example.greenrise_sgp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.greenrise_sgp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySellerLoginBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText LoginEmail;

  @NonNull
  public final EditText LoginPasswd;

  @NonNull
  public final TextView forgotpass;

  @NonNull
  public final TextView googlesignin;

  @NonNull
  public final Button loginbtn;

  @NonNull
  public final TextView regtv;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView4;

  private ActivitySellerLoginBinding(@NonNull RelativeLayout rootView, @NonNull EditText LoginEmail,
      @NonNull EditText LoginPasswd, @NonNull TextView forgotpass, @NonNull TextView googlesignin,
      @NonNull Button loginbtn, @NonNull TextView regtv, @NonNull TextView textView2,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.LoginEmail = LoginEmail;
    this.LoginPasswd = LoginPasswd;
    this.forgotpass = forgotpass;
    this.googlesignin = googlesignin;
    this.loginbtn = loginbtn;
    this.regtv = regtv;
    this.textView2 = textView2;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySellerLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySellerLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_seller_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySellerLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LoginEmail;
      EditText LoginEmail = ViewBindings.findChildViewById(rootView, id);
      if (LoginEmail == null) {
        break missingId;
      }

      id = R.id.LoginPasswd;
      EditText LoginPasswd = ViewBindings.findChildViewById(rootView, id);
      if (LoginPasswd == null) {
        break missingId;
      }

      id = R.id.forgotpass;
      TextView forgotpass = ViewBindings.findChildViewById(rootView, id);
      if (forgotpass == null) {
        break missingId;
      }

      id = R.id.googlesignin;
      TextView googlesignin = ViewBindings.findChildViewById(rootView, id);
      if (googlesignin == null) {
        break missingId;
      }

      id = R.id.loginbtn;
      Button loginbtn = ViewBindings.findChildViewById(rootView, id);
      if (loginbtn == null) {
        break missingId;
      }

      id = R.id.regtv;
      TextView regtv = ViewBindings.findChildViewById(rootView, id);
      if (regtv == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new ActivitySellerLoginBinding((RelativeLayout) rootView, LoginEmail, LoginPasswd,
          forgotpass, googlesignin, loginbtn, regtv, textView2, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
